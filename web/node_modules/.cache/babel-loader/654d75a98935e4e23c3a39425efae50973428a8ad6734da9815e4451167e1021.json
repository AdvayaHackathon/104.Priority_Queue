{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhu\\\\OneDrive\\\\Documents\\\\bgs\\\\104.Priority_Queue\\\\web\\\\src\\\\pages\\\\patient\\\\NewCheckup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Send, Upload, ChevronLeft } from \"lucide-react\";\nimport BackButton from \"../../components/shared/BackButton\";\nimport ReactMarkdown from 'react-markdown'; // Changed from named import to default import\n\n// Your Gemini API key should be in .env file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GEMINI_API_KEY = process.env.REACT_APP_GEMINI_API_KEY || \"AIzaSyDIj_BIwaYHQoNKDkZxdf1IZ3KtMS5lk2Y\";\nconst NewCheckup = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [chatMessages, setChatMessages] = useState([{\n    role: \"assistant\",\n    content: \"Hello! I'm your AI assistant. How can I help you with this checkup?\"\n  }]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [prescriptionNotes, setPrescriptionNotes] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const chatContainerRef = useRef(null);\n\n  // Auto-scroll to bottom of chat\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  // Function to call Gemini API\n  const callGeminiAPI = async message => {\n    setIsLoading(true);\n    try {\n      var _responseData$candida, _responseData$candida2, _responseData$candida3;\n      const generationConfig = {\n        temperature: 1,\n        topP: 0.95,\n        topK: 40,\n        maxOutputTokens: 8192\n      };\n\n      // Start with the system prompt and include chat history\n      const chatHistory = chatMessages.filter(msg => msg.role !== \"system\").map(msg => ({\n        role: msg.role === \"assistant\" ? \"model\" : \"user\",\n        parts: [{\n          text: msg.content\n        }]\n      }));\n\n      // Add the new message\n      chatHistory.push({\n        role: \"user\",\n        parts: [{\n          text: message\n        }]\n      });\n      const data = {\n        generationConfig,\n        contents: chatHistory,\n        systemInstruction: {\n          role: \"user\",\n          parts: [{\n            text: 'You are a healthcare assistant chatbot. When a doctor or user sends you a prescription (in plain text or structured format), your job is to:\\n\\nRead and extract the key prescription details such as:\\n\\nDrug names\\n\\nDosage\\n\\nFrequency\\n\\nDuration\\n\\nInstructions (e.g., \"after food\", \"before bed\")\\n\\nStart a conversational response to:\\n\\nConfirm and summarize the prescription\\n\\nAsk any necessary clarifying questions (e.g., missing dosage or duration)\\n\\nAlert if there is anything unusual, like high dosages or potential duplicate medications\\n\\n(Optional) Based on access to patient history (if provided), suggest:\\n\\nDrug-drug interactions\\n\\nRisk factors\\n\\nSafer alternatives\\n\\nKeep your tone professional, helpful, and non-alarming.\\n\\nNever make final medical decisions\\n\\nAlways defer to the prescribing doctor for confirmation\\n\\nIf asked, generate a clean version of the prescription or save it for upload.\\n\\nYour goal is to act like a smart assistant that \"thinks out loud\" about the prescription and helps verify or enhance it with intelligence â€” but always with the doctor in control.'\n          }]\n        }\n      };\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=${GEMINI_API_KEY}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const responseData = await response.json();\n      if (responseData.candidates && (_responseData$candida = responseData.candidates[0]) !== null && _responseData$candida !== void 0 && (_responseData$candida2 = _responseData$candida.content) !== null && _responseData$candida2 !== void 0 && (_responseData$candida3 = _responseData$candida2.parts[0]) !== null && _responseData$candida3 !== void 0 && _responseData$candida3.text) {\n        return responseData.candidates[0].content.parts[0].text;\n      } else {\n        console.error(\"Unexpected API response:\", responseData);\n        return \"I'm sorry, I couldn't process that request. Please try again.\";\n      }\n    } catch (error) {\n      console.error(\"Error calling Gemini API:\", error);\n      return \"I apologize, but I encountered an error. Please try again later.\";\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to handle sending the initial prescription\n  const handleSharePrescription = async () => {\n    if (!prescriptionNotes.trim()) {\n      alert(\"Please enter prescription details first.\");\n      return;\n    }\n    setIsLoading(true);\n\n    // Prepare the message with prescription notes\n    const message = `Prescription:\\n\\n${prescriptionNotes}`;\n\n    // Add user message to chat\n    setChatMessages(prev => [...prev, {\n      role: \"user\",\n      content: message\n    }]);\n\n    // Get AI response\n    const aiResponse = await callGeminiAPI(message);\n\n    // Add AI response to chat\n    setChatMessages(prev => [...prev, {\n      role: \"assistant\",\n      content: aiResponse\n    }]);\n    setIsLoading(false);\n  };\n\n  // Function to handle sending a message\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!inputMessage.trim() || isLoading) return;\n\n    // Add user message to chat\n    setChatMessages(prev => [...prev, {\n      role: \"user\",\n      content: inputMessage\n    }]);\n\n    // Clear input field\n    const messageToBeSent = inputMessage;\n    setInputMessage(\"\");\n\n    // Get AI response\n    const aiResponse = await callGeminiAPI(messageToBeSent);\n\n    // Add AI response to chat\n    setChatMessages(prev => [...prev, {\n      role: \"assistant\",\n      content: aiResponse\n    }]);\n  };\n\n  // Function to handle uploading prescription\n  const handleUploadPrescription = () => {\n    // Add your upload logic here\n    console.log(\"Uploading prescription:\", prescriptionNotes);\n    // You could save this to a database or blockchain here\n    alert(\"Prescription uploaded successfully!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[calc(100vh-theme(spacing.16))] flex flex-col overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border-b border-gray-200 p-4 flex-shrink-0\",\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-800 mt-2\",\n        children: \"New Checkup Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: [\"Patient ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/2 border-r border-gray-200 flex flex-col bg-white overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-200 flex-shrink-0\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"AI Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatContainerRef,\n          className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n          children: [chatMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${message.role === \"user\" ? \"justify-end\" : \"justify-start\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `max-w-[80%] rounded-lg px-4 py-2 ${message.role === \"user\" ? \"bg-blue-600 text-white\" : \"bg-gray-100 text-gray-900\"}`,\n              children: message.role === \"assistant\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"markdown\",\n                children: message.content.split(/(\\*\\*.*?\\*\\*)/).map((part, i) => {\n                  if (part.startsWith('**') && part.endsWith('**')) {\n                    return /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: part.slice(2, -2)\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 34\n                    }, this);\n                  }\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: part\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 32\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this) : message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"max-w-[80%] rounded-lg px-4 py-2 bg-gray-100 text-gray-900\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-2 w-2 bg-gray-400 rounded-full animate-bounce\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-2 w-2 bg-gray-400 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.2s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-2 w-2 bg-gray-400 rounded-full animate-bounce\",\n                  style: {\n                    animationDelay: '0.4s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"p-4 border-t border-gray-200 flex-shrink-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              placeholder: \"Type your message...\",\n              className: \"flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: `px-4 py-2 bg-blue-600 text-white rounded-lg transition-colors ${isLoading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-700'}`,\n              disabled: isLoading,\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/2 flex flex-col bg-white overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-200 flex-shrink-0\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"Prescription Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 p-4 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: prescriptionNotes,\n            onChange: e => setPrescriptionNotes(e.target.value),\n            placeholder: \"Type your prescription notes here...\",\n            className: \"w-full h-full p-4 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 overflow-y-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-200 flex flex-col space-y-2 flex-shrink-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSharePrescription,\n            className: \"w-full px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center justify-center mb-2\",\n            disabled: isLoading || !prescriptionNotes.trim(),\n            children: [/*#__PURE__*/_jsxDEV(Send, {\n              className: \"w-5 h-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), \"Share with AI Assistant\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUploadPrescription,\n            className: \"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center\",\n            disabled: isLoading || !prescriptionNotes.trim(),\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              className: \"w-5 h-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), \"Upload Prescription\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCheckup, \"VkQ1/TodKdwnfjK6+Dd96gV82HQ=\", false, function () {\n  return [useParams];\n});\n_c = NewCheckup;\nexport default NewCheckup;\nvar _c;\n$RefreshReg$(_c, \"NewCheckup\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Send","Upload","ChevronLeft","BackButton","ReactMarkdown","jsxDEV","_jsxDEV","GEMINI_API_KEY","process","env","REACT_APP_GEMINI_API_KEY","NewCheckup","_s","id","chatMessages","setChatMessages","role","content","inputMessage","setInputMessage","prescriptionNotes","setPrescriptionNotes","isLoading","setIsLoading","chatContainerRef","current","scrollTop","scrollHeight","callGeminiAPI","message","_responseData$candida","_responseData$candida2","_responseData$candida3","generationConfig","temperature","topP","topK","maxOutputTokens","chatHistory","filter","msg","map","parts","text","push","data","contents","systemInstruction","response","fetch","method","headers","body","JSON","stringify","responseData","json","candidates","console","error","handleSharePrescription","trim","alert","prev","aiResponse","handleSendMessage","e","preventDefault","messageToBeSent","handleUploadPrescription","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","index","split","part","i","startsWith","endsWith","slice","style","animationDelay","onSubmit","type","value","onChange","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/madhu/OneDrive/Documents/bgs/104.Priority_Queue/web/src/pages/patient/NewCheckup.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Send, Upload, ChevronLeft } from \"lucide-react\";\r\nimport BackButton from \"../../components/shared/BackButton\";\r\nimport ReactMarkdown from 'react-markdown'; // Changed from named import to default import\r\n\r\n// Your Gemini API key should be in .env file\r\nconst GEMINI_API_KEY = process.env.REACT_APP_GEMINI_API_KEY || \"AIzaSyDIj_BIwaYHQoNKDkZxdf1IZ3KtMS5lk2Y\";\r\n\r\nconst NewCheckup = () => {\r\n  const { id } = useParams();\r\n  const [chatMessages, setChatMessages] = useState([\r\n    {\r\n      role: \"assistant\",\r\n      content: \"Hello! I'm your AI assistant. How can I help you with this checkup?\",\r\n    },\r\n  ]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [prescriptionNotes, setPrescriptionNotes] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const chatContainerRef = useRef(null);\r\n\r\n  // Auto-scroll to bottom of chat\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [chatMessages]);\r\n\r\n  // Function to call Gemini API\r\n  const callGeminiAPI = async (message) => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const generationConfig = {\r\n        temperature: 1,\r\n        topP: 0.95,\r\n        topK: 40,\r\n        maxOutputTokens: 8192,\r\n      };\r\n\r\n      // Start with the system prompt and include chat history\r\n      const chatHistory = chatMessages\r\n        .filter(msg => msg.role !== \"system\")\r\n        .map(msg => ({\r\n          role: msg.role === \"assistant\" ? \"model\" : \"user\",\r\n          parts: [{ text: msg.content }]\r\n        }));\r\n\r\n      // Add the new message\r\n      chatHistory.push({\r\n        role: \"user\",\r\n        parts: [{ text: message }]\r\n      });\r\n\r\n      const data = {\r\n        generationConfig,\r\n        contents: chatHistory,\r\n        systemInstruction: {\r\n          role: \"user\",\r\n          parts: [{\r\n            text: 'You are a healthcare assistant chatbot. When a doctor or user sends you a prescription (in plain text or structured format), your job is to:\\n\\nRead and extract the key prescription details such as:\\n\\nDrug names\\n\\nDosage\\n\\nFrequency\\n\\nDuration\\n\\nInstructions (e.g., \"after food\", \"before bed\")\\n\\nStart a conversational response to:\\n\\nConfirm and summarize the prescription\\n\\nAsk any necessary clarifying questions (e.g., missing dosage or duration)\\n\\nAlert if there is anything unusual, like high dosages or potential duplicate medications\\n\\n(Optional) Based on access to patient history (if provided), suggest:\\n\\nDrug-drug interactions\\n\\nRisk factors\\n\\nSafer alternatives\\n\\nKeep your tone professional, helpful, and non-alarming.\\n\\nNever make final medical decisions\\n\\nAlways defer to the prescribing doctor for confirmation\\n\\nIf asked, generate a clean version of the prescription or save it for upload.\\n\\nYour goal is to act like a smart assistant that \"thinks out loud\" about the prescription and helps verify or enhance it with intelligence â€” but always with the doctor in control.'\r\n          }]\r\n        },\r\n      };\r\n\r\n      const response = await fetch(\r\n        `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=${GEMINI_API_KEY}`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(data)\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n      \r\n      if (responseData.candidates && responseData.candidates[0]?.content?.parts[0]?.text) {\r\n        return responseData.candidates[0].content.parts[0].text;\r\n      } else {\r\n        console.error(\"Unexpected API response:\", responseData);\r\n        return \"I'm sorry, I couldn't process that request. Please try again.\";\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error calling Gemini API:\", error);\r\n      return \"I apologize, but I encountered an error. Please try again later.\";\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to handle sending the initial prescription\r\n  const handleSharePrescription = async () => {\r\n    if (!prescriptionNotes.trim()) {\r\n      alert(\"Please enter prescription details first.\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    \r\n    // Prepare the message with prescription notes\r\n    const message = `Prescription:\\n\\n${prescriptionNotes}`;\r\n    \r\n    // Add user message to chat\r\n    setChatMessages(prev => [\r\n      ...prev,\r\n      { role: \"user\", content: message }\r\n    ]);\r\n\r\n    // Get AI response\r\n    const aiResponse = await callGeminiAPI(message);\r\n    \r\n    // Add AI response to chat\r\n    setChatMessages(prev => [\r\n      ...prev,\r\n      { role: \"assistant\", content: aiResponse }\r\n    ]);\r\n    \r\n    setIsLoading(false);\r\n  };\r\n\r\n  // Function to handle sending a message\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    // Add user message to chat\r\n    setChatMessages(prev => [\r\n      ...prev, \r\n      { role: \"user\", content: inputMessage }\r\n    ]);\r\n    \r\n    // Clear input field\r\n    const messageToBeSent = inputMessage;\r\n    setInputMessage(\"\");\r\n\r\n    // Get AI response\r\n    const aiResponse = await callGeminiAPI(messageToBeSent);\r\n    \r\n    // Add AI response to chat\r\n    setChatMessages(prev => [\r\n      ...prev,\r\n      { role: \"assistant\", content: aiResponse }\r\n    ]);\r\n  };\r\n\r\n  // Function to handle uploading prescription\r\n  const handleUploadPrescription = () => {\r\n    // Add your upload logic here\r\n    console.log(\"Uploading prescription:\", prescriptionNotes);\r\n    // You could save this to a database or blockchain here\r\n    alert(\"Prescription uploaded successfully!\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-[calc(100vh-theme(spacing.16))] flex flex-col overflow-hidden\">\r\n      {/* Header */}\r\n      <div className=\"bg-white border-b border-gray-200 p-4 flex-shrink-0\">\r\n        <BackButton />\r\n        <h2 className=\"text-xl font-semibold text-gray-800 mt-2\">\r\n          New Checkup Session\r\n        </h2>\r\n        <p className=\"text-sm text-gray-500\">Patient ID: {id}</p>\r\n      </div>\r\n\r\n      {/* Split View Container */}\r\n      <div className=\"flex-1 flex overflow-hidden\"> \r\n        {/* Left Half - Chat Interface */}\r\n        <div className=\"w-1/2 border-r border-gray-200 flex flex-col bg-white overflow-hidden\">\r\n          <div className=\"p-4 border-b border-gray-200 flex-shrink-0\">\r\n            <h3 className=\"text-lg font-medium text-gray-900\">AI Assistant</h3>\r\n          </div>\r\n\r\n          {/* Scrollable Chat Area */}\r\n          <div \r\n            ref={chatContainerRef}\r\n            className=\"flex-1 overflow-y-auto p-4 space-y-4\" \r\n          >\r\n            {chatMessages.map((message, index) => (\r\n              <div\r\n                key={index}\r\n                className={`flex ${\r\n                  message.role === \"user\" ? \"justify-end\" : \"justify-start\"\r\n                }`}\r\n              >\r\n                <div\r\n                  className={`max-w-[80%] rounded-lg px-4 py-2 ${\r\n                    message.role === \"user\"\r\n                      ? \"bg-blue-600 text-white\"\r\n                      : \"bg-gray-100 text-gray-900\"\r\n                  }`}\r\n                >\r\n                  {message.role === \"assistant\" ? (\r\n                    <div className=\"markdown\">\r\n                      {/* Basic formatting for bold text */}\r\n                      {message.content.split(/(\\*\\*.*?\\*\\*)/).map((part, i) => {\r\n                        if (part.startsWith('**') && part.endsWith('**')) {\r\n                          return <strong key={i}>{part.slice(2, -2)}</strong>;\r\n                        }\r\n                        return <span key={i}>{part}</span>;\r\n                      })}\r\n                    </div>\r\n                  ) : (\r\n                    message.content\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {isLoading && (\r\n              <div className=\"flex justify-start\">\r\n                <div className=\"max-w-[80%] rounded-lg px-4 py-2 bg-gray-100 text-gray-900\">\r\n                  <div className=\"flex space-x-2\">\r\n                    <div className=\"h-2 w-2 bg-gray-400 rounded-full animate-bounce\"></div>\r\n                    <div className=\"h-2 w-2 bg-gray-400 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}}></div>\r\n                    <div className=\"h-2 w-2 bg-gray-400 rounded-full animate-bounce\" style={{animationDelay: '0.4s'}}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Message Input Form - Fixed at bottom */}\r\n          <form\r\n            onSubmit={handleSendMessage}\r\n            className=\"p-4 border-t border-gray-200 flex-shrink-0\"\r\n          >\r\n            <div className=\"flex space-x-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={inputMessage}\r\n                onChange={(e) => setInputMessage(e.target.value)}\r\n                placeholder=\"Type your message...\"\r\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                disabled={isLoading}\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className={`px-4 py-2 bg-blue-600 text-white rounded-lg transition-colors ${\r\n                  isLoading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-700'\r\n                }`}\r\n                disabled={isLoading}\r\n              >\r\n                <Send className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Right Half - Prescription Editor */}\r\n        <div className=\"w-1/2 flex flex-col bg-white overflow-hidden\">\r\n          <div className=\"p-4 border-b border-gray-200 flex-shrink-0\">\r\n            <h3 className=\"text-lg font-medium text-gray-900\">\r\n              Prescription Notes\r\n            </h3>\r\n          </div>\r\n\r\n          {/* Scrollable Prescription Area */}\r\n          <div className=\"flex-1 p-4 overflow-hidden\">\r\n            <textarea\r\n              value={prescriptionNotes}\r\n              onChange={(e) => setPrescriptionNotes(e.target.value)}\r\n              placeholder=\"Type your prescription notes here...\"\r\n              className=\"w-full h-full p-4 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 overflow-y-auto\"\r\n            />\r\n          </div>\r\n\r\n          {/* Action Buttons - Fixed at bottom */}\r\n          <div className=\"p-4 border-t border-gray-200 flex flex-col space-y-2 flex-shrink-0\">\r\n            <button\r\n              onClick={handleSharePrescription}\r\n              className=\"w-full px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center justify-center mb-2\"\r\n              disabled={isLoading || !prescriptionNotes.trim()}\r\n            >\r\n              <Send className=\"w-5 h-5 mr-2\" />\r\n              Share with AI Assistant\r\n            </button>\r\n            \r\n            <button\r\n              onClick={handleUploadPrescription}\r\n              className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center\"\r\n              disabled={isLoading || !prescriptionNotes.trim()}\r\n            >\r\n              <Upload className=\"w-5 h-5 mr-2\" />\r\n              Upload Prescription\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCheckup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,IAAI,EAAEC,MAAM,EAAEC,WAAW,QAAQ,cAAc;AACxD,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,aAAa,MAAM,gBAAgB,CAAC,CAAC;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB,IAAI,yCAAyC;AAExG,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,CAC/C;IACEoB,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE;EACX,CAAC,CACF,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACwB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM4B,gBAAgB,GAAG1B,MAAM,CAAC,IAAI,CAAC;;EAErC;EACAD,SAAS,CAAC,MAAM;IACd,IAAI2B,gBAAgB,CAACC,OAAO,EAAE;MAC5BD,gBAAgB,CAACC,OAAO,CAACC,SAAS,GAAGF,gBAAgB,CAACC,OAAO,CAACE,YAAY;IAC5E;EACF,CAAC,EAAE,CAACb,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMc,aAAa,GAAG,MAAOC,OAAO,IAAK;IACvCN,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MAAA,IAAAO,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;MACF,MAAMC,gBAAgB,GAAG;QACvBC,WAAW,EAAE,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,EAAE;QACRC,eAAe,EAAE;MACnB,CAAC;;MAED;MACA,MAAMC,WAAW,GAAGxB,YAAY,CAC7ByB,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACxB,IAAI,KAAK,QAAQ,CAAC,CACpCyB,GAAG,CAACD,GAAG,KAAK;QACXxB,IAAI,EAAEwB,GAAG,CAACxB,IAAI,KAAK,WAAW,GAAG,OAAO,GAAG,MAAM;QACjD0B,KAAK,EAAE,CAAC;UAAEC,IAAI,EAAEH,GAAG,CAACvB;QAAQ,CAAC;MAC/B,CAAC,CAAC,CAAC;;MAEL;MACAqB,WAAW,CAACM,IAAI,CAAC;QACf5B,IAAI,EAAE,MAAM;QACZ0B,KAAK,EAAE,CAAC;UAAEC,IAAI,EAAEd;QAAQ,CAAC;MAC3B,CAAC,CAAC;MAEF,MAAMgB,IAAI,GAAG;QACXZ,gBAAgB;QAChBa,QAAQ,EAAER,WAAW;QACrBS,iBAAiB,EAAE;UACjB/B,IAAI,EAAE,MAAM;UACZ0B,KAAK,EAAE,CAAC;YACNC,IAAI,EAAE;UACR,CAAC;QACH;MACF,CAAC;MAED,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qGAAqG1C,cAAc,EAAE,EACrH;QACE2C,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;MAC3B,CACF,CAAC;MAED,MAAMU,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAE1C,IAAID,YAAY,CAACE,UAAU,KAAA3B,qBAAA,GAAIyB,YAAY,CAACE,UAAU,CAAC,CAAC,CAAC,cAAA3B,qBAAA,gBAAAC,sBAAA,GAA1BD,qBAAA,CAA4Bb,OAAO,cAAAc,sBAAA,gBAAAC,sBAAA,GAAnCD,sBAAA,CAAqCW,KAAK,CAAC,CAAC,CAAC,cAAAV,sBAAA,eAA7CA,sBAAA,CAA+CW,IAAI,EAAE;QAClF,OAAOY,YAAY,CAACE,UAAU,CAAC,CAAC,CAAC,CAACxC,OAAO,CAACyB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI;MACzD,CAAC,MAAM;QACLe,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEJ,YAAY,CAAC;QACvD,OAAO,+DAA+D;MACxE;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO,kEAAkE;IAC3E,CAAC,SAAS;MACRpC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMqC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAACxC,iBAAiB,CAACyC,IAAI,CAAC,CAAC,EAAE;MAC7BC,KAAK,CAAC,0CAA0C,CAAC;MACjD;IACF;IAEAvC,YAAY,CAAC,IAAI,CAAC;;IAElB;IACA,MAAMM,OAAO,GAAG,oBAAoBT,iBAAiB,EAAE;;IAEvD;IACAL,eAAe,CAACgD,IAAI,IAAI,CACtB,GAAGA,IAAI,EACP;MAAE/C,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEY;IAAQ,CAAC,CACnC,CAAC;;IAEF;IACA,MAAMmC,UAAU,GAAG,MAAMpC,aAAa,CAACC,OAAO,CAAC;;IAE/C;IACAd,eAAe,CAACgD,IAAI,IAAI,CACtB,GAAGA,IAAI,EACP;MAAE/C,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAE+C;IAAW,CAAC,CAC3C,CAAC;IAEFzC,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAM0C,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACjD,YAAY,CAAC2C,IAAI,CAAC,CAAC,IAAIvC,SAAS,EAAE;;IAEvC;IACAP,eAAe,CAACgD,IAAI,IAAI,CACtB,GAAGA,IAAI,EACP;MAAE/C,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEC;IAAa,CAAC,CACxC,CAAC;;IAEF;IACA,MAAMkD,eAAe,GAAGlD,YAAY;IACpCC,eAAe,CAAC,EAAE,CAAC;;IAEnB;IACA,MAAM6C,UAAU,GAAG,MAAMpC,aAAa,CAACwC,eAAe,CAAC;;IAEvD;IACArD,eAAe,CAACgD,IAAI,IAAI,CACtB,GAAGA,IAAI,EACP;MAAE/C,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAE+C;IAAW,CAAC,CAC3C,CAAC;EACJ,CAAC;;EAED;EACA,MAAMK,wBAAwB,GAAGA,CAAA,KAAM;IACrC;IACAX,OAAO,CAACY,GAAG,CAAC,yBAAyB,EAAElD,iBAAiB,CAAC;IACzD;IACA0C,KAAK,CAAC,qCAAqC,CAAC;EAC9C,CAAC;EAED,oBACExD,OAAA;IAAKiE,SAAS,EAAC,iEAAiE;IAAAC,QAAA,gBAE9ElE,OAAA;MAAKiE,SAAS,EAAC,qDAAqD;MAAAC,QAAA,gBAClElE,OAAA,CAACH,UAAU;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdtE,OAAA;QAAIiE,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLtE,OAAA;QAAGiE,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,cAAY,EAAC3D,EAAE;MAAA;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eAGNtE,OAAA;MAAKiE,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBAE1ClE,OAAA;QAAKiE,SAAS,EAAC,uEAAuE;QAAAC,QAAA,gBACpFlE,OAAA;UAAKiE,SAAS,EAAC,4CAA4C;UAAAC,QAAA,eACzDlE,OAAA;YAAIiE,SAAS,EAAC,mCAAmC;YAAAC,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eAGNtE,OAAA;UACEuE,GAAG,EAAErD,gBAAiB;UACtB+C,SAAS,EAAC,sCAAsC;UAAAC,QAAA,GAE/C1D,YAAY,CAAC2B,GAAG,CAAC,CAACZ,OAAO,EAAEiD,KAAK,kBAC/BxE,OAAA;YAEEiE,SAAS,EAAE,QACT1C,OAAO,CAACb,IAAI,KAAK,MAAM,GAAG,aAAa,GAAG,eAAe,EACxD;YAAAwD,QAAA,eAEHlE,OAAA;cACEiE,SAAS,EAAE,oCACT1C,OAAO,CAACb,IAAI,KAAK,MAAM,GACnB,wBAAwB,GACxB,2BAA2B,EAC9B;cAAAwD,QAAA,EAEF3C,OAAO,CAACb,IAAI,KAAK,WAAW,gBAC3BV,OAAA;gBAAKiE,SAAS,EAAC,UAAU;gBAAAC,QAAA,EAEtB3C,OAAO,CAACZ,OAAO,CAAC8D,KAAK,CAAC,eAAe,CAAC,CAACtC,GAAG,CAAC,CAACuC,IAAI,EAAEC,CAAC,KAAK;kBACvD,IAAID,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,IAAIF,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAC,EAAE;oBAChD,oBAAO7E,OAAA;sBAAAkE,QAAA,EAAiBQ,IAAI,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAC,GAArBH,CAAC;sBAAAR,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAA6B,CAAC;kBACrD;kBACA,oBAAOtE,OAAA;oBAAAkE,QAAA,EAAeQ;kBAAI,GAARC,CAAC;oBAAAR,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAc,CAAC;gBACpC,CAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,GAEN/C,OAAO,CAACZ;YACT;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC,GAzBDE,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA0BP,CACN,CAAC,EACDtD,SAAS,iBACRhB,OAAA;YAAKiE,SAAS,EAAC,oBAAoB;YAAAC,QAAA,eACjClE,OAAA;cAAKiE,SAAS,EAAC,4DAA4D;cAAAC,QAAA,eACzElE,OAAA;gBAAKiE,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC7BlE,OAAA;kBAAKiE,SAAS,EAAC;gBAAiD;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACvEtE,OAAA;kBAAKiE,SAAS,EAAC,iDAAiD;kBAACc,KAAK,EAAE;oBAACC,cAAc,EAAE;kBAAM;gBAAE;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACxGtE,OAAA;kBAAKiE,SAAS,EAAC,iDAAiD;kBAACc,KAAK,EAAE;oBAACC,cAAc,EAAE;kBAAM;gBAAE;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGNtE,OAAA;UACEiF,QAAQ,EAAEtB,iBAAkB;UAC5BM,SAAS,EAAC,4CAA4C;UAAAC,QAAA,eAEtDlE,OAAA;YAAKiE,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BlE,OAAA;cACEkF,IAAI,EAAC,MAAM;cACXC,KAAK,EAAEvE,YAAa;cACpBwE,QAAQ,EAAGxB,CAAC,IAAK/C,eAAe,CAAC+C,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;cACjDG,WAAW,EAAC,sBAAsB;cAClCrB,SAAS,EAAC,2GAA2G;cACrHsB,QAAQ,EAAEvE;YAAU;cAAAmD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,eACFtE,OAAA;cACEkF,IAAI,EAAC,QAAQ;cACbjB,SAAS,EAAE,iEACTjD,SAAS,GAAG,+BAA+B,GAAG,mBAAmB,EAChE;cACHuE,QAAQ,EAAEvE,SAAU;cAAAkD,QAAA,eAEpBlE,OAAA,CAACN,IAAI;gBAACuE,SAAS,EAAC;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGNtE,OAAA;QAAKiE,SAAS,EAAC,8CAA8C;QAAAC,QAAA,gBAC3DlE,OAAA;UAAKiE,SAAS,EAAC,4CAA4C;UAAAC,QAAA,eACzDlE,OAAA;YAAIiE,SAAS,EAAC,mCAAmC;YAAAC,QAAA,EAAC;UAElD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eAGNtE,OAAA;UAAKiE,SAAS,EAAC,4BAA4B;UAAAC,QAAA,eACzClE,OAAA;YACEmF,KAAK,EAAErE,iBAAkB;YACzBsE,QAAQ,EAAGxB,CAAC,IAAK7C,oBAAoB,CAAC6C,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;YACtDG,WAAW,EAAC,sCAAsC;YAClDrB,SAAS,EAAC;UAAwI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGNtE,OAAA;UAAKiE,SAAS,EAAC,oEAAoE;UAAAC,QAAA,gBACjFlE,OAAA;YACEwF,OAAO,EAAElC,uBAAwB;YACjCW,SAAS,EAAC,gIAAgI;YAC1IsB,QAAQ,EAAEvE,SAAS,IAAI,CAACF,iBAAiB,CAACyC,IAAI,CAAC,CAAE;YAAAW,QAAA,gBAEjDlE,OAAA,CAACN,IAAI;cAACuE,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,2BAEnC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAETtE,OAAA;YACEwF,OAAO,EAAEzB,wBAAyB;YAClCE,SAAS,EAAC,yHAAyH;YACnIsB,QAAQ,EAAEvE,SAAS,IAAI,CAACF,iBAAiB,CAACyC,IAAI,CAAC,CAAE;YAAAW,QAAA,gBAEjDlE,OAAA,CAACL,MAAM;cAACsE,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,uBAErC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChE,EAAA,CA3RID,UAAU;EAAA,QACCZ,SAAS;AAAA;AAAAgG,EAAA,GADpBpF,UAAU;AA6RhB,eAAeA,UAAU;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}